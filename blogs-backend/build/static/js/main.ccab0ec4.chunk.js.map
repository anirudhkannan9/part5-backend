{"version":3,"sources":["components/Blog.js","services/blogs.js","services/login.js","App.js","index.js"],"names":["Blog","blog","title","author","token","getAll","axios","get","then","response","data","setToken","newToken","create","newObject","a","config","headers","Authorization","post","login","credentials","App","useState","blogs","setBlogs","username","setUsername","password","setPassword","user","setUser","setTitle","setAuthor","url","setUrl","useEffect","blogService","loggedUserJSON","window","localStorage","getItem","JSON","parse","console","log","handleLogin","event","preventDefault","loginService","setItem","stringify","addBlog","blogObject","name","returnedBlog","concat","onSubmit","type","value","onChange","target","onClick","removeItem","logout","map","key","id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ccab0ec4.chunk.js","sourcesContent":["import React from 'react'\r\nconst Blog = ({ blog }) => (\r\n  <div>\r\n    {blog.title} {blog.author}\r\n  </div>\r\n)\r\n\r\nexport default Blog\r\n","import axios from 'axios'\nconst baseUrl = '/api/blogs'\n\nlet token  = null\n\nconst setToken = newToken => {\n  token = `bearer ${newToken}`\n}\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  return request.then(response => response.data)\n}\n\nconst create = async newObject => {\n  const config = {\n    headers: { Authorization: token },\n  }\n\n  const response = await axios.post(baseUrl, newObject, config)\n  return response.data\n}\n\nexport default { getAll, setToken, create }","import axios from 'axios'\nconst baseUrl = '/api/login'\n\nconst login = async credentials => {\n    const response = await axios.post(baseUrl, credentials)\n    return response.data\n}\n\nexport default { login }","import React, { useState, useEffect } from 'react'\nimport Blog from './components/Blog'\nimport blogService from './services/blogs'\nimport loginService from './services/login'\n\nconst App = () => {\n  const [blogs, setBlogs] = useState([])\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [user, setUser] = useState(null)\n  const [title, setTitle] = useState('')\n  const [author, setAuthor] = useState('')\n  const [url, setUrl] = useState('')\n\n  useEffect(() => {\n    blogService.getAll().then(blogs =>\n      setBlogs( blogs )\n    )  \n  }, [])\n\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('loggedBlogappUser')\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON)\n      setUser(user)\n      console.log(user, 'is logged in')\n    } \n  }, [])\n\n  const handleLogin = async (event) => {\n    event.preventDefault()\n    console.log('logging in w:', username, password)\n\n    try {\n      const user = await loginService.login({\n        username, password\n      })\n\n      window.localStorage.setItem(\n        'loggedBlogappUser', JSON.stringify(user)\n      ) \n\n      blogService.setToken(user.token)\n      setUser(user)\n      setUsername('')\n      setPassword('')\n  } catch (exception) {\n    console.log('Wrong credentials')\n  }\n    \n  }\n\n  const handleLogout = (event) => {\n    event.preventDefault()\n    console.log('logging out user:', user.name)\n    window.localStorage.removeItem('loggedBlogappUser')\n    setUser(null)\n  }\n\n  const addBlog = async (event) => {\n    event.preventDefault()\n    const blogObject = {\n      title: title, \n      author: author, \n      url: url\n    }\n    console.log(`Created blogObject:`, blogObject, `now making async/await call to post on behalf of ${user.name}`)\n\n    const returnedBlog = await blogService.create(blogObject)\n\n    console.log('Successfully posted blogObject:', returnedBlog)\n\n    setBlogs(blogs.concat(returnedBlog))\n    setTitle('')\n    setAuthor('')\n    setUrl('')\n\n\n    \n \n  }\n\n  if (user === null) {\n    return (\n      <div>\n        <h2>Login to application</h2>\n        <form onSubmit={handleLogin}>\n        <div>\n          Username\n            <input\n            type=\"text\"\n            value={username}\n            name=\"Username\"\n            onChange={({ target }) => setUsername(target.value)}\n          />\n        </div>\n        <div>\n          Password\n            <input\n            type=\"password\"\n            value={password}\n            name=\"Password\"\n            onChange={({ target }) => setPassword(target.value)}\n          />\n        </div>\n        <button type=\"submit\">Login</button>\n      </form>\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <h2>Blogs</h2>\n      <p>{user.name} logged in</p> <button onClick={handleLogout}logout>Logout</button>\n      <h2>Create new</h2>\n      <form onSubmit={addBlog}>\n        <div>\n          Title:\n            <input\n            type=\"text\"\n            value={title}\n            name=\"Title\"\n            onChange={({ target }) => setTitle(target.value)}\n          />\n        </div>\n        <div>\n          Author:\n            <input\n            type=\"text\"\n            value={author}\n            name=\"Author\"\n            onChange={({ target }) => setAuthor(target.value)}\n          />\n        </div>\n        <div>\n          URL:\n            <input\n            type=\"text\"\n            value={url}\n            name=\"Url\"\n            onChange={({ target }) => setUrl(target.value)}\n          />\n        </div>\n        <button type=\"submit\">Create</button>\n      </form>\n      {blogs.map(blog =>\n        <Blog key={blog.id} blog={blog} />\n      )}\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}